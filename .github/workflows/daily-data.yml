name: Daily data refresh (no deploy)

on:
  schedule:
    - cron: "0 17 * * *"   # 00:00 WIB (UTC+7)
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # 1) Checkout master so the R script is present
      - name: Checkout master
        uses: actions/checkout@v4
        with:
          ref: master
          fetch-depth: 0

      - name: Setup R
        uses: r-lib/actions/setup-r@v2

      # 2) Ensure packages exist BEFORE running the script (two layers of safety)
      - name: Setup R dependencies (matrix)
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          packages: |
            tidyverse
            lubridate
            readr
            here

      - name: Ensure packages (fallback)
        run: |
          Rscript -e 'pkgs <- c("tidyverse","lubridate","readr","here");
                      miss <- pkgs[!vapply(pkgs, function(p) requireNamespace(p, quietly=TRUE), logical(1))];
                      if (length(miss)) install.packages(miss, repos="https://cloud.r-project.org")'

      # 3) Work on data-updates branch locally
      - name: Prepare data-updates branch
        run: |
          git fetch origin data-updates || true
          if git show-ref --verify --quiet refs/remotes/origin/data-updates; then
            git switch -c data-updates origin/data-updates
          else
            git switch -c data-updates
          fi

      - name: Prepare raw folder (placeholder)
        run: mkdir -p data/raw

      # 4) Build the CSV
      - name: Build driver_trips.csv via R
        run: Rscript scripts/build_driver_trips.R

      # 5) Commit & push if changed
      - name: Commit & push if changed
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          if ! git diff --quiet --exit-code -- data/driver_trips.csv; then
            git add data/driver_trips.csv
            git commit -m "data: update driver_trips.csv [skip deploy]"
            git push origin HEAD:data-updates
          else
            echo "No data changes; nothing to commit."
          fi


