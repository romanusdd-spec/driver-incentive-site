---
title: "Ringkasan Driver — Dodi"
format:
  html:
    toc: true
---


```{r}
#| label: setup
library(tidyverse)
library(scales)
library(lubridate)
library(here)

# helpers
indo_month <- function(m) c("Januari","Februari","Maret","April","Mei","Juni",
                            "Juli","Agustus","September","Oktober","November","Desember")[as.integer(m)]
fmt_rp <- function(x) paste0("Rp. ", formatC(as.numeric(x), format = "f", big.mark = ".", decimal.mark = ",", digits = 0))
fmt_hms <- function(sec){
  sec <- as.numeric(sec); h <- floor(sec/3600); m <- floor((sec %% 3600)/60); s <- round(sec %% 60)
  sprintf("%02d:%02d:%02d", h, m, s)
}

# --- Read CSV robustly (handles comma or semicolon CSV) ---
fp <- here::here("data", "driver_trips.csv")

df <- tryCatch(
  readr::read_csv(fp, show_col_types = FALSE),
  error = function(e) {
    # fallback to semicolon-delimited
    readr::read_csv2(fp, show_col_types = FALSE)
  }
)

# Validate required columns
required_cols <- c("driver","trip_id","date","km_driving","dur_driving_s",
                   "dur_parking_s","incentive_rp","sj_balikan")
missing <- setdiff(required_cols, names(df))
if (length(missing)) {
  stop("CSV missing columns: ", paste(missing, collapse = ", "))
}

# Ensure types
df <- df %>%
  mutate(
    driver = as.character(driver),
    trip_id = as.character(trip_id),
    date = as.Date(date),
    km_driving = as.double(km_driving),
    dur_driving_s = as.double(dur_driving_s),
    dur_parking_s = as.double(dur_parking_s),
    incentive_rp = as.double(incentive_rp),
    sj_balikan = as.integer(sj_balikan)
  )

# --- Select driver for this page ---
drv <- "dodi"  # for alice.qmd / bob.qmd set this string to "alice" / "bob"

# Filter
df_drv <- df %>% filter(tolower(.data$driver) == tolower(drv))
stopifnot(nrow(df_drv) > 0)

# Use the month of the latest date in this driver's data
last_day <- max(df_drv$date, na.rm = TRUE)
df_m <- df_drv %>%
  filter(year(date) == year(last_day), month(date) == month(last_day))

# KPIs
kpi_incent <- sum(df_m$incentive_rp, na.rm = TRUE)
kpi_trips  <- nrow(df_m)
kpi_km     <- sum(df_m$km_driving, na.rm = TRUE)
kpi_drive  <- sum(df_m$dur_driving_s, na.rm = TRUE)
kpi_park   <- sum(df_m$dur_parking_s, na.rm = TRUE)
kpi_sj     <- sum(df_m$sj_balikan, na.rm = TRUE)
```





Selamat Datang, **`r tools::toTitleCase(drv)`**

---

::: {.well}
🚚 Hati-hati ketika menyetir di jalan — ingat keluarga di rumah. 🏡
:::

::: {.well}
Akumulasi insentif per tanggal **<span id="sum_day">–</span> <span id="sum_month">–</span>** adalah **<span id="kpi_incent">–</span>**
:::

---

### KPIs (Bulan Berjalan)
- Jumlah Trip: **<span id="kpi_trips">–</span>**  
- Jumlah KM: **<span id="kpi_km">–</span>**  
- Durasi Berkendara: **<span id="kpi_drive">–</span>**  
- Durasi Parkir: **<span id="kpi_park">–</span>**  
- SJ Balikan: **<span id="kpi_sj">–</span>**

<!-- CSV parser -->
<script src="https://cdn.jsdelivr.net/npm/papaparse@5.4.1/papaparse.min.js"></script>

<script>
(function () {
  const RAW_CSV_URL =
    "https://raw.githubusercontent.com/romanusdd-spec/driver-incentive-site/refs/heads/data-updates/data/driver_trips.csv";

  // Driver from URL: /drivers/dodi.html -> "dodi"
  const DRIVER = (location.pathname || "")
    .toLowerCase()
    .split("/")
    .pop()
    .replace(/\.html$/, "");

  const indoMonth = (i) => ["Januari","Februari","Maret","April","Mei","Juni","Juli","Agustus","September","Oktober","November","Desember"][i];
  const fmtRp = (x) => "Rp. " + Math.round(Number(x)||0).toString().replace(/\B(?=(\d{3})+(?!\d))/g,".");
  const fmtNum = (x) => Number(x||0).toLocaleString("id-ID");
  const fmtHMS = (s)=>{s=Math.round(Number(s)||0);const h=Math.floor(s/3600),m=Math.floor((s%3600)/60),d=s%60;const p=z=>String(z).padStart(2,"0");return `${p(h)}:${p(m)}:${p(d)}`};
  const setText = (id,val)=>{const el=document.getElementById(id); if(el) el.textContent=val};

  function renderTable(rows) {
    const tbody = document.querySelector("#detail tbody");
    if (!tbody) return;
    tbody.innerHTML = ""; // clear

    // newest first
    rows.sort((a,b)=>b.d - a.d).forEach(r => {
      const tr = document.createElement("tr");
      tr.innerHTML = `
        <td style="padding:6px 4px; border-bottom:1px solid #f0f0f0;">${r.d.toISOString().slice(0,10)}</td>
        <td style="padding:6px 4px; border-bottom:1px solid #f0f0f0;">${r.trip_id}</td>
        <td style="padding:6px 4px; border-bottom:1px solid #f0f0f0; text-align:right;">${fmtNum(r.km)}</td>
        <td style="padding:6px 4px; border-bottom:1px solid #f0f0f0; text-align:right;">${fmtHMS(r.dr)}</td>
        <td style="padding:6px 4px; border-bottom:1px solid #f0f0f0; text-align:right;">${fmtHMS(r.pk)}</td>
        <td style="padding:6px 4px; border-bottom:1px solid #f0f0f0; text-align:right;">${fmtRp(r.inc)}</td>
        <td style="padding:6px 4px; border-bottom:1px solid #f0f0f0; text-align:center;">${Number(r.sj)||0}</td>
      `;
      tbody.appendChild(tr);
    });
  }

  fetch(RAW_CSV_URL, { cache: "no-store" })
    .then(r => { if(!r.ok) throw new Error("CSV fetch failed: " + r.status); return r.text(); })
    .then(text => new Promise(res => Papa.parse(text, { header: true, skipEmptyLines: true, complete: v => res(v.data) })))
    .then(rows => {
      const my = rows
        .filter(r => (r.driver||"").toLowerCase() === DRIVER)
        .map(r => ({
          d: new Date(r.date),
          trip_id: r.trip_id,
          km: +(r.km_driving||0),
          dr: +(r.dur_driving_s||0),
          pk: +(r.dur_parking_s||0),
          inc: +(r.incentive_rp||0),
          sj: +(r.sj_balikan||0)
        }));
      if (!my.length) throw new Error("No rows for driver " + DRIVER);

      const last = my.reduce((a,b)=> a.d>b.d ? a : b).d;
      const y = last.getFullYear(), m = last.getMonth();
      const mtd = my.filter(x => x.d.getFullYear()===y && x.d.getMonth()===m);

      // KPIs
      const sum = (fn) => mtd.reduce((s,x)=>s+fn(x),0);
      setText("sum_day", String(last.getDate()));
      setText("sum_month", indoMonth(m));
      setText("kpi_incent", fmtRp(sum(x=>x.inc)));
      setText("kpi_trips",  String(mtd.length));
      setText("kpi_km",     fmtNum(sum(x=>x.km)));
      setText("kpi_drive",  fmtHMS(sum(x=>x.dr)));
      setText("kpi_park",   fmtHMS(sum(x=>x.pk)));
      setText("kpi_sj",     String(sum(x=>x.sj)));

      // Detail table
      renderTable(mtd);
    })
    .catch(err => console.warn("[live KPIs/table] fallback to static:", err));
})();
</script>


```{r}
#| label: plot-daily
daily <- df_m %>% count(date, wt = incentive_rp, name = "incentive_rp")
ggplot(daily, aes(date, incentive_rp)) +
  geom_col() +
  labs(title = "Ringkasan Insentif Harian (Bulan Berjalan)",
       x = "Tanggal", y = "Insentif") +
  scale_y_continuous(labels = label_number(prefix = "Rp ", big.mark = ".", decimal.mark = ",")) +
  theme_minimal()
```



### Detail Trip (Bulan Berjalan)

<table id="detail" style="width:100%; border-collapse:collapse; font-size: 0.95rem;">
  <thead>
    <tr>
      <th style="text-align:left; border-bottom:1px solid #e5e7eb; padding:6px 4px;">Tanggal</th>
      <th style="text-align:left; border-bottom:1px solid #e5e7eb; padding:6px 4px;">Trip ID</th>
      <th style="text-align:right; border-bottom:1px solid #e5e7eb; padding:6px 4px;">KM Berkendara</th>
      <th style="text-align:right; border-bottom:1px solid #e5e7eb; padding:6px 4px;">Durasi Berkendara</th>
      <th style="text-align:right; border-bottom:1px solid #e5e7eb; padding:6px 4px;">Durasi Parkir</th>
      <th style="text-align:right; border-bottom:1px solid #e5e7eb; padding:6px 4px;">Insentif (Rp)</th>
      <th style="text-align:center; border-bottom:1px solid #e5e7eb; padding:6px 4px;">SJ Balikan</th>
    </tr>
  </thead>
  <tbody></tbody>
</table>

